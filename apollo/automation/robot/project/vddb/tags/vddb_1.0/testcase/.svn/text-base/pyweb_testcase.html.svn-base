<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<style type="text/css">
html {
  font-family: Arial,Helvetica,sans-serif;
  background-color: white;
  color: black;
}
table {
  border-collapse: collapse;
  empty-cells: show;
  margin: 1em 0em;
  border: 1px solid black;
}
th, td {
  border: 1px solid black;
  padding: 0.1em 0.2em;
  height: 1.5em;
  width: 12em;
}
td.colspan4, th.colspan4 {
    width: 48em;
}
td.colspan3, th.colspan3 {
    width: 36em;
}
td.colspan2, th.colspan2 {
    width: 24em;
}
th {
  background-color: rgb(192, 192, 192);
  color: black;
  height: 1.7em;
  font-weight: bold;
  text-align: center;
  letter-spacing: 0.1em;
}
td.name {
  background-color: rgb(240, 240, 240);
  letter-spacing: 0.1em;
}
td.name, th.name {
  width: 10em;
}
</style>
<title>Pyweb Testcase</title>
</head>
<body>
<h1>Pyweb Testcase</h1>
<table border="1" id="setting">
<tr>
<th class="name" colspan="5">Settings</th>
</tr>
<tr>
<td class="name">Test Setup</td>
<td>set pyweb env</td>
<td>${SCRIPT_ROOT}/${PYWEB_SUT_FILE}</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_PORT}</td>
</tr>
<tr>
<td class="name">...</td>
<td>${SSL}</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name">Library</td>
<td>OperatingSystem</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name">Library</td>
<td>XML</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name">Library</td>
<td>DatabaseLibrary</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name">Library</td>
<td>../../../common/trunk/testlib/DatetimeLib.py</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name">Library</td>
<td>../../../common/trunk/testlib/CommonLib.py</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name">Library</td>
<td>../testlib/VddbLib.py</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name">Resource</td>
<td>../resource/vddb_resource.html</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name">Resource</td>
<td>../resource/pyweb_keyword.html</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name">Resource</td>
<td>../../../common/trunk/resource/common_resource.html</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name">Resource</td>
<td>../../../common/trunk/resource/common_keywords.html</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name">Library</td>
<td>collections</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name">Library</td>
<td>SSHLibrary</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</table>
<table border="1" id="testcase">
<tr>
<th class="name" colspan="5">Test Cases</th>
</tr>
<tr>
<td class="name"><a name="test_vdna-1742">vdna-1742</a></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/distinct/dna/1?md5=123456</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>get instance uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
<td>${VDDB_NODE_DBPASSWD}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>update mediaContentInstance set is_valid = 'valid' where instance_uuid = '${inst_uuid}'</td>
<td>false</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/distinct/dna/1?md5=123456</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${code} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>code</td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${code}</td>
<td>${409}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1971">vdna-1971</a></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/distinct/dna/1?md5=123456</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>get instance uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
<td>${VDDB_NODE_DBPASSWD}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>update mediaContentInstance set is_valid = 'valid' where instance_uuid = '${inst_uuid}'</td>
<td>false</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>GET</td>
<td>/mediawise/${meta_uuid}/instances/${inst_uuid}/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>body</td>
</tr>
<tr>
<td class="name"></td>
<td>check instance info with db data</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
<td>${VDDB_NODE_DBPASSWD}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>${body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1978">vdna-1978</a></td>
<td>Set Test Variable</td>
<td>${edit_name}</td>
<td>new inst name</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/distinct/dna/1?md5=123456</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>get instance uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
<td>${VDDB_NODE_DBPASSWD}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>update mediaContentInstance set is_valid = 'valid' where instance_uuid = '${inst_uuid}'</td>
<td>false</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>PUT</td>
<td>/mediawise/${meta_uuid}/instances/${inst_uuid}/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "name":"${edit_name}" }</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${name} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select instance_name from mediaContentInstance where instance_uuid = '${inst_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${name[0][0]}</td>
<td>${edit_name}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1972">vdna-1972</a></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/distinct/dna/1?md5=123456</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>get instance uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
<td>${VDDB_NODE_DBPASSWD}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>update mediaContentInstance set is_valid = 'valid' where instance_uuid = '${inst_uuid}'</td>
<td>false</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>DELETE</td>
<td>/mediawise/instances/${inst_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie":"${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${is_valid} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select is_valid from mediaContentInstance where instance_uuid = '${inst_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${is_valid[0][0]}</td>
<td>delete</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1973">vdna-1973</a></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/dna/1?md5=123456</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>get instance uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
<td>${VDDB_NODE_DBPASSWD}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>update mediaContentInstance set is_valid = 'valid' where instance_uuid = '${inst_uuid}'</td>
<td>false</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/dna/1?md5=123456</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid2} =</td>
<td>get instance uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
<td>${VDDB_NODE_DBPASSWD}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>update mediaContentInstance set is_valid = 'valid' where instance_uuid = '${inst_uuid2}'</td>
<td>false</td>
</tr>
<tr>
<td class="name"></td>
<td>${code} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>code</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>DELETE</td>
<td>/mediawise/instances/${inst_uuid2}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie":"${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select id from meta where meta_uuid = '${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from mediaContentInstance where meta_id = ${meta_id[0][0]}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${code}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count[0][0]}</td>
<td>${2}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1963">vdna-1963</a></td>
<td>${token}</td>
<td>${meta_uuid} =</td>
<td>non live new meta</td>
<td>${PYWEB_PROTOCOL}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_USER}</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>Movie</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1963-2">vdna-1963-2</a></td>
<td>${token}</td>
<td>${meta_uuid} =</td>
<td>non live new meta</td>
<td>${PYWEB_PROTOCOL}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_USER}</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>TV</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_TV}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1963-3">vdna-1963-3</a></td>
<td>${token}</td>
<td>${meta_uuid} =</td>
<td>non live new meta</td>
<td>${PYWEB_PROTOCOL}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_USER}</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>Music</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MUSIC}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1964">vdna-1964</a></td>
<td>${meta_type} =</td>
<td>Catenate</td>
<td>Movie</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token}</td>
<td>${meta_uuid} =</td>
<td>non live new meta</td>
<td>${PYWEB_PROTOCOL}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_USER}</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${meta_type}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>pyweb api call</td>
<td>GET</td>
<td>/mediawise/contents/${meta_uuid}/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie":"${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>convert to dict</td>
<td>${result}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_body} =</td>
<td>Call Method</td>
<td>${result}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>body</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_body} =</td>
<td>convert to dict</td>
<td>${result_body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_msg} =</td>
<td>Call Method</td>
<td>${result_body}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>msg</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${result_msg}</td>
<td>Successful</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body} =</td>
<td>Call Method</td>
<td>${result_body}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>body</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${content_id} =</td>
<td>Call Method</td>
<td>${body[0]}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>content_id</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${meta_uuid}</td>
<td>${content_id}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1977">vdna-1977</a></td>
<td>${meta_type} =</td>
<td>Catenate</td>
<td>Movie</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_title} =</td>
<td>Catenate</td>
<td>new_movie_test</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${new_mtea_title} =</td>
<td>Catenate</td>
<td>{'title':'${meta_title}'}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>@{update_info} =</td>
<td>Create List</td>
<td>${new_mtea_title}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token}</td>
<td>${meta_uuid} =</td>
<td>non live new meta</td>
<td>${PYWEB_PROTOCOL}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_USER}</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${meta_type}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_info} =</td>
<td>update data</td>
<td>${META_INFO_MOVIE}</td>
<td>${update_info}</td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>pyweb api call</td>
<td>PUT</td>
<td>/mediawise/contents/${meta_uuid}/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${meta_info}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie":"${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${edit_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${result}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${edit_uuid}</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>pyweb api call</td>
<td>GET</td>
<td>/mediawise/contents/${meta_uuid}/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie":"${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>convert to dict</td>
<td>${result}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_body} =</td>
<td>Call Method</td>
<td>${result}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>body</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_body} =</td>
<td>convert to dict</td>
<td>${result_body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_msg} =</td>
<td>Call Method</td>
<td>${result_body}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>msg</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${result_msg}</td>
<td>Successful</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body} =</td>
<td>Call Method</td>
<td>${result_body}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>body</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${body[0]}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${content_id} =</td>
<td>Call Method</td>
<td>${body[0]}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>content_id</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${meta_uuid}</td>
<td>${content_id}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${sql} =</td>
<td>Catenate</td>
<td>select id,meta_uuid,company_id,subCompany_id,meta_type,meta_title,customer_ref_id,status,is_live,is_valid,customer_ref_id_type,right_owner,studio_owner,cast,tag,genre,rating,duration,release_date,tracking_protocol,vtweb_tracking_start_time,vtweb_tracking_stop_time,created_at,created_by,updated_at,client_updated_at,updated_by,remote_version,local_version from meta where meta_uuid = "${meta_uuid}"</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check meta info</td>
<td>meta_title</td>
<td>${meta_title}</td>
<td>${sql}</td>
</tr>
<tr>
<td class="name"></td>
<td>check meta info</td>
<td>meta_type</td>
<td>${meta_type}</td>
<td>${sql}</td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1969">vdna-1969</a></td>
<td>${token}</td>
<td>${meta_uuid} =</td>
<td>non live new meta</td>
<td>${PYWEB_PROTOCOL}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_USER}</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>Movie</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
<td>${VDDB_NODE_PASSWD}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check meta info</td>
<td>is_valid</td>
<td>delete</td>
<td>select is_valid from meta where meta_uuid = '${meta_uuid}';</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check meta info</td>
<td>is_valid</td>
<td>delete</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>select is_valid from mediaContentInstance where instance_uuid = '${meta_uuid}'</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1548">vdna-1548</a></td>
<td>Set Test Variable</td>
<td>@{meta_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_db}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${index}</td>
<td>IN RANGE</td>
<td>3</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${token}</td>
<td>${meta_uuid} =</td>
<td>non live new meta</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>Movie</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>call method</td>
<td>${meta_list}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_list_string} =</td>
<td>json dumps</td>
<td>${meta_list}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${sub_id} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME_MEDIADNA}</td>
<td>select id from subscription where criteria_type = 'static' limit 1</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/subscription/${sub_id[0][0]}/contents/add</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${meta_list_string}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/subscription/${sub_id[0][0]}/contents/add</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${meta_list_string}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_list_query} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME_MEDIADNA}</td>
<td>select metaContent_uuid from metaContent_subscription where subscription_id = ${sub_id[0][0]} and valid = 'true'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${meta_db}</td>
<td>IN</td>
<td>@{meta_list_query}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>call method</td>
<td>${meta_list_db}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_db[0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${meta}</td>
<td>IN</td>
<td>@{meta_list}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Run Keyword If</td>
<td>'${meta}' not in ${meta_list_db}</td>
<td>Fail</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta} do not add in subscription ${sub_id[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta list</td>
<td>${meta_list}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1741">vdna-1741</a></td>
<td>Set Test Variable</td>
<td>@{meta_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_db}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_del}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${index}</td>
<td>IN RANGE</td>
<td>3</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${token}</td>
<td>${meta_uuid} =</td>
<td>non live new meta</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>Movie</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>call method</td>
<td>${meta_list}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_list_string} =</td>
<td>json dumps</td>
<td>${meta_list}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${sub_id} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME_MEDIADNA}</td>
<td>select id from subscription where criteria_type = 'static' limit 1</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/subscription/${sub_id[0][0]}/contents/add</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${meta_list_string}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>call method</td>
<td>${meta_del}</td>
<td>append</td>
<td>${meta_list[0]}</td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_del_string} =</td>
<td>json dumps</td>
<td>${meta_del}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_not_del} =</td>
<td>deep copy</td>
<td>${meta_list}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>call method</td>
<td>${meta_not_del}</td>
<td>remove</td>
<td>${meta_list[0]}</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/subscription/${sub_id[0][0]}/contents/delete</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${meta_del_string}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_list_query} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME_MEDIADNA}</td>
<td>select metaContent_uuid from metaContent_subscription where subscription_id = ${sub_id[0][0]} and valid = 'true'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${meta_db}</td>
<td>IN</td>
<td>@{meta_list_query}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>call method</td>
<td>${meta_list_db}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_db[0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${meta}</td>
<td>IN</td>
<td>@{meta_del}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Run Keyword If</td>
<td>'${meta}' in ${meta_list_db}</td>
<td>Fail</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta} should be deleted</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${meta}</td>
<td>IN</td>
<td>@{meta_not_del}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Run Keyword If</td>
<td>'${meta}' not in ${meta_list_db}</td>
<td>Fail</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta} should be in subsription</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta list</td>
<td>${meta_list}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1966">vdna-1966</a></td>
<td>${meta_type} =</td>
<td>Catenate</td>
<td>Movie</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_ref_uuid} =</td>
<td>get customer ref id</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${new_customer_ref_id} =</td>
<td>Catenate</td>
<td>{"id":{"type":"ISRC","value":"${customer_ref_uuid}"}}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>@{update_info} =</td>
<td>Create List</td>
<td>${new_customer_ref_id}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_info} =</td>
<td>update data</td>
<td>${META_INFO_MOVIE}</td>
<td>${update_info}</td>
</tr>
<tr>
<td class="name"></td>
<td>${token}</td>
<td>${meta_uuid} =</td>
<td>non live new meta</td>
<td>${PYWEB_PROTOCOL}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_USER}</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${meta_type}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${meta_info}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>pyweb api call</td>
<td>GET</td>
<td>/mediawise/contents/${meta_uuid}/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie":"${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>convert to dict</td>
<td>${result}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_body} =</td>
<td>Call Method</td>
<td>${result}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>body</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_body} =</td>
<td>convert to dict</td>
<td>${result_body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_msg} =</td>
<td>Call Method</td>
<td>${result_body}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>msg</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${result_msg}</td>
<td>Successful</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body} =</td>
<td>Call Method</td>
<td>${result_body}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>body</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${id} =</td>
<td>Call Method</td>
<td>${body[0]}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>id</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_ref_id} =</td>
<td>Call Method</td>
<td>${id}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>value</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_ref_id_type} =</td>
<td>Call Method</td>
<td>${id}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>type</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>pyweb api call</td>
<td>GET</td>
<td>/mediawise/contents/custom/${customer_ref_id_type}/${customer_ref_id}/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie":"${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>convert to dict</td>
<td>${result}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_body} =</td>
<td>Call Method</td>
<td>${result}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>body</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_body} =</td>
<td>convert to dict</td>
<td>${result_body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_msg} =</td>
<td>Call Method</td>
<td>${result_body}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>msg</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${result_msg}</td>
<td>Successful</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body} =</td>
<td>Call Method</td>
<td>${result_body}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>body</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${id} =</td>
<td>Call Method</td>
<td>${body[0]}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>id</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_ref_id} =</td>
<td>Call Method</td>
<td>${id}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>value</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_ref_id_type} =</td>
<td>Call Method</td>
<td>${id}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>type</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${sql} =</td>
<td>Catenate</td>
<td>select id,meta_uuid,company_id,subCompany_id,meta_type,meta_title,customer_ref_id,status,is_live,is_valid,customer_ref_id_type,right_owner,studio_owner,cast,tag,genre,rating,duration,release_date,tracking_protocol,vtweb_tracking_start_time,vtweb_tracking_stop_time,created_at,created_by,updated_at,client_updated_at,updated_by,remote_version,local_version from meta where meta_uuid = "${meta_uuid}"</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check meta info</td>
<td>customer_ref_id</td>
<td>${customer_ref_uuid}</td>
<td>${sql}</td>
</tr>
<tr>
<td class="name"></td>
<td>check meta info</td>
<td>customer_ref_id_type</td>
<td>${customer_ref_id_type}</td>
<td>${sql}</td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1967">vdna-1967</a></td>
<td>${meta_type} =</td>
<td>Catenate</td>
<td>Movie</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_title} =</td>
<td>Catenate</td>
<td>new_movie_test</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${new_mtea_title} =</td>
<td>Catenate</td>
<td>{'title':'${meta_title}'}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>@{update_info} =</td>
<td>Create List</td>
<td>${new_mtea_title}</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>${meta_info} =</td>
<td>update data</td>
<td>${META_INFO_MOVIE}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${update_info}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_ref_uuid} =</td>
<td>get customer ref id</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${new_customer_ref_id} =</td>
<td>Catenate</td>
<td>{"id":{"type":"ISRC","value":"${customer_ref_uuid}"}}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>@{update_info} =</td>
<td>Create List</td>
<td>${new_customer_ref_id}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_info} =</td>
<td>update data</td>
<td>${META_INFO_MOVIE}</td>
<td>${update_info}</td>
</tr>
<tr>
<td class="name"></td>
<td>${token}</td>
<td>${meta_uuid} =</td>
<td>non live new meta</td>
<td>${PYWEB_PROTOCOL}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_USER}</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${meta_type}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${meta_info}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>pyweb api call</td>
<td>GET</td>
<td>/mediawise/contents/${meta_uuid}/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie":"${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>convert to dict</td>
<td>${result}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_body} =</td>
<td>Call Method</td>
<td>${result}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>body</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_body} =</td>
<td>convert to dict</td>
<td>${result_body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_msg} =</td>
<td>Call Method</td>
<td>${result_body}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>msg</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${result_msg}</td>
<td>Successful</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body} =</td>
<td>Call Method</td>
<td>${result_body}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>body</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${id} =</td>
<td>Call Method</td>
<td>${body[0]}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>id</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_ref_id} =</td>
<td>Call Method</td>
<td>${id}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>value</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_ref_id_type} =</td>
<td>Call Method</td>
<td>${id}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>type</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>@{update_info} =</td>
<td>Create List</td>
<td>${new_mtea_title}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_info} =</td>
<td>update data</td>
<td>${meta_info}</td>
<td>${update_info}</td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>pyweb api call</td>
<td>PUT</td>
<td>/mediawise/contents/custom/${customer_ref_id_type}/${customer_ref_id}/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${meta_info}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie":"${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_inst_url} =</td>
<td>get json element</td>
<td>${result}</td>
<td>header.location</td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_url} =</td>
<td>Call Method</td>
<td>${meta_inst_url}</td>
<td>split</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PORT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>pyweb api call</td>
<td>GET</td>
<td>${meta_url[1]}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie":"${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>convert to dict</td>
<td>${result}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_body} =</td>
<td>Call Method</td>
<td>${result}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>body</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_body} =</td>
<td>convert to dict</td>
<td>${result_body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_msg} =</td>
<td>Call Method</td>
<td>${result_body}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>msg</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${result_msg}</td>
<td>Successful</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body} =</td>
<td>Call Method</td>
<td>${result_body}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>body</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${content_id} =</td>
<td>Call Method</td>
<td>${body[0]}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>content_id</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${meta_uuid}</td>
<td>${content_id}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${sql} =</td>
<td>Catenate</td>
<td>select id,meta_uuid,company_id,subCompany_id,meta_type,meta_title,customer_ref_id,status,is_live,is_valid,customer_ref_id_type,right_owner,studio_owner,cast,tag,genre,rating,duration,release_date,tracking_protocol,vtweb_tracking_start_time,vtweb_tracking_stop_time,created_at,created_by,updated_at,client_updated_at,updated_by,remote_version,local_version from meta where meta_uuid = "${meta_uuid}"</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check meta info</td>
<td>meta_title</td>
<td>${meta_title}</td>
<td>${sql}</td>
</tr>
<tr>
<td class="name"></td>
<td>check meta info</td>
<td>meta_type</td>
<td>${meta_type}</td>
<td>${sql}</td>
</tr>
<tr>
<td class="name"></td>
<td>check meta info</td>
<td>customer_ref_id</td>
<td>${customer_ref_uuid}</td>
<td>${sql}</td>
</tr>
<tr>
<td class="name"></td>
<td>check meta info</td>
<td>customer_ref_id_type</td>
<td>${customer_ref_id_type}</td>
<td>${sql}</td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1970">vdna-1970</a></td>
<td>${meta_type} =</td>
<td>Catenate</td>
<td>Movie</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_ref_uuid} =</td>
<td>get customer ref id</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${new_customer_ref_id} =</td>
<td>Catenate</td>
<td>{"id":{"type":"ISRC","value":"${customer_ref_uuid}"}}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>@{update_info} =</td>
<td>Create List</td>
<td>${new_customer_ref_id}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_info} =</td>
<td>update data</td>
<td>${META_INFO_MOVIE}</td>
<td>${update_info}</td>
</tr>
<tr>
<td class="name"></td>
<td>${token}</td>
<td>${meta_uuid} =</td>
<td>non live new meta</td>
<td>${PYWEB_PROTOCOL}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_USER}</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${meta_type}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${meta_info}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>pyweb api call</td>
<td>GET</td>
<td>/mediawise/contents/${meta_uuid}/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie":"${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>convert to dict</td>
<td>${result}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_body} =</td>
<td>Call Method</td>
<td>${result}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>body</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_body} =</td>
<td>convert to dict</td>
<td>${result_body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_msg} =</td>
<td>Call Method</td>
<td>${result_body}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>msg</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${result_msg}</td>
<td>Successful</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body} =</td>
<td>Call Method</td>
<td>${result_body}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>body</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${id} =</td>
<td>Call Method</td>
<td>${body[0]}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>id</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_ref_id} =</td>
<td>Call Method</td>
<td>${id}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>value</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_ref_id_type} =</td>
<td>Call Method</td>
<td>${id}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>type</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>pyweb api call</td>
<td>GET</td>
<td>/mediawise/contents/custom/${customer_ref_id_type}/${customer_ref_id}/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie":"${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>convert to dict</td>
<td>${result}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_body} =</td>
<td>Call Method</td>
<td>${result}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>body</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_body} =</td>
<td>convert to dict</td>
<td>${result_body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_msg} =</td>
<td>Call Method</td>
<td>${result_body}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>msg</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${result_msg}</td>
<td>Successful</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body} =</td>
<td>Call Method</td>
<td>${result_body}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>body</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${id} =</td>
<td>Call Method</td>
<td>${body[0]}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>id</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_ref_id} =</td>
<td>Call Method</td>
<td>${id}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>value</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_ref_id_type} =</td>
<td>Call Method</td>
<td>${id}</td>
<td>get</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>type</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>pyweb api call</td>
<td>DELETE</td>
<td>/mediawise/contents/custom/${customer_ref_id_type}/${customer_ref_id}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie":"${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check meta info</td>
<td>is_valid</td>
<td>delete</td>
<td>select is_valid from meta where meta_uuid = '${meta_uuid}';</td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-test">vdna-test</a></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/distinct/dna/1?md5=1234567</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>get instance uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
<td>${VDDB_NODE_DBPASSWD}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>update mediaContentInstance set is_valid = 'valid' where instance_uuid = '${inst_uuid}'</td>
<td>false</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>send dna</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/${inst_uuid}/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_AUDIO_DNA}</td>
<td>audio</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/${inst_uuid}/dna/eof</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_delete">delete</a></td>
<td>delete meta and instance</td>
<td>ea3ec8b2-a94f-11e3-ad21-74d43546cff3</td>
<td>ea3ec8b2-a94f-11e3-ad21-74d43546cff3</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-ingest">vdna-ingest</a></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_AUDIO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-test-idna">vdna-test-idna</a></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/distinct/dna/1?md5=1234567</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>get instance uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
<td>${VDDB_NODE_DBPASSWD}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>update mediaContentInstance set is_valid = 'valid' where instance_uuid = '${inst_uuid}'</td>
<td>false</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>send idna</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/${inst_uuid}/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_SCREENSHOT_FOLDER}</td>
<td>screenshot</td>
<td>folder</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${token}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/${inst_uuid}/dna/eof</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-test-download">vdna-test-download</a></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "admin", \ \ \ \ \ "password": "admin123" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>download dna</td>
<td>GET</td>
<td>/mediawise/instances/24a60774-82c5-11e3-ae43-74d43546d037/dna/avonly</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>/tmp/123.dna</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1732">vdna-1732</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-1732:创建distinct dna——video</td>
</tr>
<tr>
<td class="name"></td>
<td>[Tags]</td>
<td>vdna-1732</td>
<td>上传dna</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>calling interface first</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/distinct/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid}</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>calling interface second</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return_2} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/distinct/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return_2}</td>
<td>${409}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>Check Database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*), id from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count}</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Catenate</td>
<td>${result[0][1]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*), instance_uuid from mediaContentInstance where meta_id='${meta_id}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count}</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>Catenate</td>
<td>${result[0][1]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from videoInstanceTrack where instance_uuid='${inst_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count}</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${dna_path} =</td>
<td>get dna file path</td>
<td>${inst_uuid}</td>
<td>video</td>
</tr>
<tr>
<td class="name"></td>
<td>check dna</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>${dna_path}</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${REMOTE_RUN_CMD_PORT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1732-2">vdna-1732-2</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-1732:创建distinct dna——audio</td>
</tr>
<tr>
<td class="name"></td>
<td>[Tags]</td>
<td>vdna-1732</td>
<td>上传dna</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>calling interface first</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/distinct/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_AUDIO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check code&amp;msg</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid}</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>calling interface second</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return_2} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/distinct/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_AUDIO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check code&amp;msg</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return_2}</td>
<td>${409}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>${code} =</td>
<td>Get Json Element</td>
<td>${return_2}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*), id from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count}</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Catenate</td>
<td>${result[0][1]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*), instance_uuid from mediaContentInstance where meta_id='${meta_id}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count}</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>Catenate</td>
<td>${result[0][1]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from audioInstanceTrack where instance_uuid='${inst_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count}</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${dna_path} =</td>
<td>get dna file path</td>
<td>${inst_uuid}</td>
<td>audio</td>
</tr>
<tr>
<td class="name"></td>
<td>check dna</td>
<td>${SCRIPT_ROOT}/${TEST_AUDIO_DNA}</td>
<td>${dna_path}</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${REMOTE_RUN_CMD_PORT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1553">vdna-1553</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-1553:创建 dna（可重复）——video</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>calling interface first</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid}</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>calling interface second</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return_2} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return_2}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid_2}</td>
<td>get meta uuid from api return</td>
<td>${return_2}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>Check Database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select id from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select id from meta where meta_uuid='${meta_uuid_2}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id_2} =</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_2} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select instance_uuid from mediaContentInstance where meta_id='${meta_id}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>Convert To String</td>
<td>${result_2[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_2} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select instance_uuid from mediaContentInstance where meta_id='${meta_id_2}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid_2} =</td>
<td>Convert To String</td>
<td>${result_2[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from videoInstanceTrack where instance_uuid in ('${inst_uuid}','${inst_uuid_2}')</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count}</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>2</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${dna_path} =</td>
<td>get dna file path</td>
<td>${inst_uuid}</td>
<td>video</td>
</tr>
<tr>
<td class="name"></td>
<td>check dna</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>${dna_path}</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${REMOTE_RUN_CMD_PORT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta&amp;inst list</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{inst_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>call method</td>
<td>${meta_list}</td>
<td>append</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td>call method</td>
<td>${meta_list}</td>
<td>append</td>
<td>${meta_uuid_2}</td>
</tr>
<tr>
<td class="name"></td>
<td>call method</td>
<td>${inst_list}</td>
<td>append</td>
<td>${inst_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td>call method</td>
<td>${inst_list}</td>
<td>append</td>
<td>${inst_uuid_2}</td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and inst list</td>
<td>${meta_list}</td>
<td>${inst_list}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1553-2">vdna-1553-2</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-1553:创建 dna（可重复）——audio</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>calling interface first</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_AUDIO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid}</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>calling interface second</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return_2} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_AUDIO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return_2}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid_2}</td>
<td>get meta uuid from api return</td>
<td>${return_2}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>Check Database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select id from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select id from meta where meta_uuid='${meta_uuid_2}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id_2} =</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_2} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select instance_uuid from mediaContentInstance where meta_id='${meta_id}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>Convert To String</td>
<td>${result_2[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_2} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select instance_uuid from mediaContentInstance where meta_id='${meta_id_2}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid_2} =</td>
<td>Convert To String</td>
<td>${result_2[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from audioInstanceTrack where instance_uuid in ('${inst_uuid}','${inst_uuid_2}')</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count}</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>2</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${dna_path} =</td>
<td>get dna file path</td>
<td>${inst_uuid}</td>
<td>audio</td>
</tr>
<tr>
<td class="name"></td>
<td>check dna</td>
<td>${SCRIPT_ROOT}/${TEST_AUDIO_DNA}</td>
<td>${dna_path}</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${REMOTE_RUN_CMD_PORT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta&amp;inst list</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{inst_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>call method</td>
<td>${meta_list}</td>
<td>append</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td>call method</td>
<td>${meta_list}</td>
<td>append</td>
<td>${meta_uuid_2}</td>
</tr>
<tr>
<td class="name"></td>
<td>call method</td>
<td>${inst_list}</td>
<td>append</td>
<td>${inst_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td>call method</td>
<td>${inst_list}</td>
<td>append</td>
<td>${inst_uuid_2}</td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and inst list</td>
<td>${meta_list}</td>
<td>${inst_list}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1985">vdna-1985</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-1985:分段入库dna—— video</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta&amp;instance</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/distinct/dna/1?md5=1234567</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>get instance uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
<td>${VDDB_NODE_DBPASSWD}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>update mediaContentInstance set is_valid = 'valid' where instance_uuid = '${inst_uuid}'</td>
<td>false</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>calling interface</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>send dna</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/${inst_uuid}/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>video</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td>${return_2} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/${inst_uuid}/dna/eof</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check code&amp;msg</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>Check Database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count_meta} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count_inst} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from mediaContentInstance where instance_uuid='${inst_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count_meta}</td>
<td>Convert To String</td>
<td>${count_meta[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count_inst}</td>
<td>Convert To String</td>
<td>${count_inst[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count_meta}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count_inst}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from videoInstanceTrack where instance_uuid='${inst_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count}</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${dna_path} =</td>
<td>get dna file path</td>
<td>${inst_uuid}</td>
<td>video</td>
</tr>
<tr>
<td class="name"></td>
<td>check dna</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>${dna_path}</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${REMOTE_RUN_CMD_PORT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1985-2">vdna-1985-2</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-1985:分段入库dna——audio</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta&amp;instance</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/distinct/dna/1?md5=1234567</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>get instance uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
<td>${VDDB_NODE_DBPASSWD}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>update mediaContentInstance set is_valid = 'valid' where instance_uuid = '${inst_uuid}'</td>
<td>false</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>calling interface</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>send dna</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/${inst_uuid}/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_AUDIO_DNA}</td>
<td>audio</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td>${return_2} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/${inst_uuid}/dna/eof</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check code&amp;msg</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>Check Database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count_meta} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count_inst} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from mediaContentInstance where instance_uuid='${inst_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count_meta}</td>
<td>Convert To String</td>
<td>${count_meta[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count_inst}</td>
<td>Convert To String</td>
<td>${count_inst[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count_meta}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count_inst}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from audioInstanceTrack where instance_uuid='${inst_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count}</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${dna_path} =</td>
<td>get dna file path</td>
<td>${inst_uuid}</td>
<td>audio</td>
</tr>
<tr>
<td class="name"></td>
<td>check dna</td>
<td>${SCRIPT_ROOT}/${TEST_AUDIO_DNA}</td>
<td>${dna_path}</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${REMOTE_RUN_CMD_PORT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1987">vdna-1987</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-1987:meta下挂载instance dna（不可重复）</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>ingest dna first</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Dna Ingest</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/distinct/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>get instance uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err_code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>ingest dna second</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Dna Ingest</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/distinct/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err_code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${409}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select id from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Catenate</td>
<td>${meta_id[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from mediaContentInstance where meta_id='${meta_id}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count} =</td>
<td>Convert To String</td>
<td>${count[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1989">vdna-1989</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-1989:meta下挂载instance dna（可重复）</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td># asdasdsds</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>ingest dna first</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Dna Ingest</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>get instance uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err_code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>ingest dna second</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return_2} =</td>
<td>Dna Ingest</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err_code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return_2}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select id from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Catenate</td>
<td>${meta_id[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from mediaContentInstance where meta_id='${meta_id}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count} =</td>
<td>Convert To String</td>
<td>${count[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>2</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2023">vdna-2023</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2023:ingest far文件（不可重复）</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>calling interface first</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/distinct/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_FAR_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check code&amp;msg</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid}</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>calling interface second</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return_2} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/distinct/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_FAR_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check code&amp;msg</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return_2}</td>
<td>${409}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>Check Database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*), id from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count}</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Catenate</td>
<td>${result[0][1]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*), instance_uuid from mediaContentInstance where meta_id='${meta_id}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count}</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>Catenate</td>
<td>${result[0][1]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${merge_file} =</td>
<td>get far file</td>
<td>${inst_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${dna_file} =</td>
<td>Convert To String</td>
<td>${merge_file[0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${adna_file} =</td>
<td>Convert To String</td>
<td>${merge_file[1]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Run Cmd</td>
<td>${DNA_TOOL_LOCAL}/far_split -i ${SCRIPT_ROOT}/${TEST_FAR_DNA} -d ${TEST_DNA_FOLDER}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Run Cmd</td>
<td>${DNA_TOOL_LOCAL}/dna_split -i ${TEST_DNA_FOLDER}/merged.dna -d ${TEST_DNA_FOLDER}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check dna</td>
<td>${TEST_DNA_FOLDER}/merged.dna.0.dna</td>
<td>${dna_file}</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${REMOTE_RUN_CMD_PORT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check dna</td>
<td>${TEST_DNA_FOLDER}/merged.dna.1.adna</td>
<td>${adna_file}</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${REMOTE_RUN_CMD_PORT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2024">vdna-2024</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2023:ingest far文件（可重复）</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>calling interface first</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_FAR_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check code&amp;msg</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid}</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>calling interface second</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return_2} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_FAR_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check code&amp;msg</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return_2}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid_2}</td>
<td>get meta uuid from api return</td>
<td>${return_2}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>Check Database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select id from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select id from meta where meta_uuid='${meta_uuid_2}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id_2} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select instance_uuid from mediaContentInstance where meta_id='${meta_id}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>Convert To String</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select instance_uuid from mediaContentInstance where meta_id='${meta_id_2}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid_2} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${merge_file} =</td>
<td>get far file</td>
<td>${inst_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${dna_file} =</td>
<td>Convert To String</td>
<td>${merge_file[0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${adna_file} =</td>
<td>Convert To String</td>
<td>${merge_file[1]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Run Cmd</td>
<td>${DNA_TOOL_LOCAL}/far_split -i ${SCRIPT_ROOT}/${TEST_FAR_DNA} -d ${TEST_DNA_FOLDER}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Run Cmd</td>
<td>${DNA_TOOL_LOCAL}/dna_split -i ${TEST_DNA_FOLDER}/merged.dna -d ${TEST_DNA_FOLDER}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check dna</td>
<td>${TEST_DNA_FOLDER}/merged.dna.0.dna</td>
<td>${dna_file}</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${REMOTE_RUN_CMD_PORT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check dna</td>
<td>${TEST_DNA_FOLDER}/merged.dna.1.adna</td>
<td>${adna_file}</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${REMOTE_RUN_CMD_PORT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta&amp;inst list</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{inst_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>call method</td>
<td>${meta_list}</td>
<td>append</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td>call method</td>
<td>${meta_list}</td>
<td>append</td>
<td>${meta_uuid_2}</td>
</tr>
<tr>
<td class="name"></td>
<td>call method</td>
<td>${inst_list}</td>
<td>append</td>
<td>${inst_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td>call method</td>
<td>${inst_list}</td>
<td>append</td>
<td>${inst_uuid_2}</td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and inst list</td>
<td>${meta_list}</td>
<td>${inst_list}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1737">vdna-1737</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-1737:下载 avonly dna——video</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER_2}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD_2}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>ingest one dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/distinct/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select id from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select instance_uuid from mediaContentInstance where meta_id='${meta_id}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>download dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Download Dna</td>
<td>GET</td>
<td>/mediawise/instances/${inst_uuid}/dna/avonly</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${DOWNLOAD_PATH}/${inst_uuid}.0.dna</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${dna_path} =</td>
<td>get dna file path</td>
<td>${inst_uuid}</td>
<td>video</td>
</tr>
<tr>
<td class="name"></td>
<td>check dna</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>${dna_path}</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${REMOTE_RUN_CMD_PORT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1737-2">vdna-1737-2</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-1737:下载 avonly dna—— audio</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER_2}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD_2}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>ingest one dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/distinct/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_AUDIO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select id from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select instance_uuid from mediaContentInstance where meta_id='${meta_id}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>download dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Download Dna</td>
<td>GET</td>
<td>/mediawise/instances/${inst_uuid}/dna/avonly</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${DOWNLOAD_PATH}/${inst_uuid}.0.dna</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${dna_path} =</td>
<td>get dna file path</td>
<td>${inst_uuid}</td>
<td>audio</td>
</tr>
<tr>
<td class="name"></td>
<td>check dna</td>
<td>${SCRIPT_ROOT}/${TEST_AUDIO_DNA}</td>
<td>${dna_path}</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${REMOTE_RUN_CMD_PORT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1738">vdna-1738</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-1738:下载 dna——video</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER_2}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD_2}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>ingest one dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/distinct/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select id from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select instance_uuid from mediaContentInstance where meta_id='${meta_id}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>download dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Download Dna</td>
<td>GET</td>
<td>/mediawise/instances/${inst_uuid}/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${DOWNLOAD_PATH}/${inst_uuid}.0.dna</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${dna_path} =</td>
<td>get dna file path</td>
<td>${inst_uuid}</td>
<td>video</td>
</tr>
<tr>
<td class="name"></td>
<td>check dna</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>${dna_path}</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${REMOTE_RUN_CMD_PORT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1738-2">vdna-1738-2</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-1738:下载 dna—— audio</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER_2}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD_2}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>ingest one dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/distinct/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_AUDIO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select id from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select instance_uuid from mediaContentInstance where meta_id='${meta_id}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>download dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Download Dna</td>
<td>GET</td>
<td>/mediawise/instances/${inst_uuid}/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${DOWNLOAD_PATH}/${inst_uuid}.0.dna</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check dna</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${dna_path} =</td>
<td>get dna file path</td>
<td>${inst_uuid}</td>
<td>audio</td>
</tr>
<tr>
<td class="name"></td>
<td>check dna</td>
<td>${SCRIPT_ROOT}/${TEST_AUDIO_DNA}</td>
<td>${dna_path}</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${REMOTE_RUN_CMD_PORT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2032">vdna-2032</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2032:上传 snapshot（upload_snapshot）</td>
</tr>
<tr>
<td class="name"></td>
<td>[Tags]</td>
<td>bug</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER_2}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD_2}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta&amp;instance</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/distinct/dna/1?md5=123456</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>get instance uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>upload snapshot</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${type} =</td>
<td>Catenate</td>
<td>video</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${track_no} =</td>
<td>Catenate</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${file_format} =</td>
<td>Catenate</td>
<td>jpeg</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${file_name} =</td>
<td>Catenate</td>
<td>1351_45045</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select is_valid from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select is_valid from mediaContentInstance where instance_uuid='${inst_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>update mediaContentInstance set is_valid = 'valid' where instance_uuid = '${inst_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>false</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${SCRIPT_ROOT}/${TEST_SNAPSHOT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Dna Ingest</td>
<td>POST</td>
<td>/mediawise/tracks/${type}/${inst_uuid}/${track_no}/snapshots/${file_name}/${file_format}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_SNAPSHOT}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>${return} =</td>
<td>Dna Ingest</td>
<td>PUT</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>/mw-int/tracks/video/${inst_uuid}/0/snapshots/${file_name}/jpeg</td>
<td>${SCRIPT_ROOT}/${TEST_SNAPSHOT}</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from videoSnapshot where instance_uuid='${inst_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count} =</td>
<td>Catenate</td>
<td>${return[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1991">vdna-1991</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-1991:获取instance的track信息——video</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>dna ingest</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/distinct/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_VIDEO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid}</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select id from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select instance_uuid from mediaContentInstance where meta_id='${meta_id}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>get track info</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${track_no} =</td>
<td>Catenate</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Pyweb Api Call</td>
<td>GET</td>
<td>/mediawise/instances/${inst_uuid}/tracks/${track_no}/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${instance_id} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>body.body.instance_id</td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${inst_uuid}</td>
<td>${instance_id}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from videoInstanceTrack where instance_uuid='${inst_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${video_duration} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>body.body.video_duration</td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select track_number,video_duration from videoInstanceTrack where instance_uuid='${inst_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${no} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${track_no}</td>
<td>${no}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${video_duration}</td>
<td>${result[0][1]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1991-2">vdna-1991-2</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-1991:获取instance的track信息——audio</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>dna ingest</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>dna_ingest</td>
<td>POST</td>
<td>/mediawise/contents/distinct/dna</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_AUDIO_DNA}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid}</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select id from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_id} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select instance_uuid from mediaContentInstance where meta_id='${meta_id}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>get track info</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${track_no} =</td>
<td>Catenate</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Pyweb Api Call</td>
<td>GET</td>
<td>/mediawise/instances/${inst_uuid}/tracks/${track_no}/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${instance_id} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>body.body.instance_id</td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${inst_uuid}</td>
<td>${instance_id}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from audioInstanceTrack where instance_uuid='${inst_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select track_number from audioInstanceTrack where instance_uuid='${inst_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${no} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${track_no}</td>
<td>${no}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2004">vdna-2004</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2004:创建thumbnail meta</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>new thumbnail meta</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${file} =</td>
<td>Catenate</td>
<td>${SCRIPT_ROOT}/${TEST_THUMBNAIL_1}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Dna Ingest</td>
<td>POST</td>
<td>/mediawise/contents/thumbnail</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${file}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from meta where meta_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from metaContentSampleImage where metaContent_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check thumbnai</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${thumbnail} =</td>
<td>Get Binary File</td>
<td>${SCRIPT_ROOT}/${TEST_THUMBNAIL_1}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${image_filecontent} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select image_filecontent from metaContentSampleImage where metaContent_uuid = '${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${thumbnail}</td>
<td>${image_filecontent[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2005">vdna-2005</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2005:通过meta_uuid获取thumbnail</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>new thumbnail meta</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${file} =</td>
<td>Catenate</td>
<td>${SCRIPT_ROOT}/${TEST_THUMBNAIL_1}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Dna Ingest</td>
<td>POST</td>
<td>/mediawise/contents/thumbnail</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${file}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Download Dna</td>
<td>GET</td>
<td>/mediawise/contents/${meta_uuid}/thumbnail</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${DOWNLOAD_PATH}/${meta_uuid}_thumbnail.jpg</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from metaContentSampleImage where metaContent_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check thumbnai</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${thumbnail} =</td>
<td>Get Binary File</td>
<td>${DOWNLOAD_PATH}/${meta_uuid}_thumbnail.jpg</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${image_filecontent} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select image_filecontent from metaContentSampleImage where metaContent_uuid = '${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${thumbnail}</td>
<td>${image_filecontent[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2006">vdna-2006</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2006:通过meta_uuid修改thumbnail</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>new thumbnail meta</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${file} =</td>
<td>Catenate</td>
<td>${SCRIPT_ROOT}/${TEST_THUMBNAIL_1}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Dna Ingest</td>
<td>POST</td>
<td>/mediawise/contents/thumbnail</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${file}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>edit thumbnail</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${file_2} =</td>
<td>Catenate</td>
<td>${SCRIPT_ROOT}/${TEST_THUMBNAIL_2}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Dna Ingest</td>
<td>PUT</td>
<td>/mediawise/contents/${meta_uuid}/thumbnail</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${file_2}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check thumbnai</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${thumbnail_2} =</td>
<td>Get Binary File</td>
<td>${SCRIPT_ROOT}/${TEST_THUMBNAIL_2}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${image_filecontent} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select image_filecontent from metaContentSampleImage where metaContent_uuid = '${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${thumbnail_2}</td>
<td>${image_filecontent[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2007">vdna-2007</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2007:根据customer信息获取thumbnail</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>new meta</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token}</td>
<td>${meta_uuid} =</td>
<td>non live new meta</td>
<td>${PYWEB_PROTOCOL}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_USER}</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>Movie</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>add thumbnail</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${file} =</td>
<td>Catenate</td>
<td>${SCRIPT_ROOT}/${TEST_THUMBNAIL_1}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Dna Ingest</td>
<td>PUT</td>
<td>/mediawise/contents/${meta_uuid}/thumbnail</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${file}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>get cust thumbnail</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${customer} =</td>
<td>Get Json Element</td>
<td>${META_INFO_MOVIE}</td>
<td>id</td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_type} =</td>
<td>Get Json Element</td>
<td>${META_INFO_MOVIE}</td>
<td>id.type</td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_ref_id} =</td>
<td>Get Json Element</td>
<td>${META_INFO_MOVIE}</td>
<td>id.value</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Download Dna</td>
<td>GET</td>
<td>/mediawise/contents/custom/${customer_type}/${customer_ref_id}/thumbnail</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${DOWNLOAD_PATH}/${meta_uuid}_thumbnail.jpg</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err_code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from metaContentSampleImage where metaContent_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check thumbnai</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${thumbnail} =</td>
<td>Get Binary File</td>
<td>${DOWNLOAD_PATH}/${meta_uuid}_thumbnail.jpg</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${image_filecontent} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select image_filecontent from metaContentSampleImage where metaContent_uuid = '${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${thumbnail}</td>
<td>${image_filecontent[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2008">vdna-2008</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2008:根据customer信息修改thumbnail</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>new meta</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token}</td>
<td>${meta_uuid} =</td>
<td>non live new meta</td>
<td>${PYWEB_PROTOCOL}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_USER}</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>Movie</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>add thumbnail</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${file} =</td>
<td>Catenate</td>
<td>${SCRIPT_ROOT}/${TEST_THUMBNAIL_1}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Dna Ingest</td>
<td>PUT</td>
<td>/mediawise/contents/${meta_uuid}/thumbnail</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${file}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>edit cust thumbnail</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${customer} =</td>
<td>Get Json Element</td>
<td>${META_INFO_MOVIE}</td>
<td>id</td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_type} =</td>
<td>Get Json Element</td>
<td>${META_INFO_MOVIE}</td>
<td>id.type</td>
</tr>
<tr>
<td class="name"></td>
<td>${customer_ref_id} =</td>
<td>Get Json Element</td>
<td>${META_INFO_MOVIE}</td>
<td>id.value</td>
</tr>
<tr>
<td class="name"></td>
<td>${file_2} =</td>
<td>Catenate</td>
<td>${SCRIPT_ROOT}/${TEST_THUMBNAIL_2}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Dna Ingest</td>
<td>PUT</td>
<td>/mediawise/contents/custom/${customer_type}/${customer_ref_id}/thumbnail</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${file_2}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err_code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select count(*) from metaContentSampleImage where metaContent_uuid='${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count} =</td>
<td>Catenate</td>
<td>${result[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${count}</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check thumbnai</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${thumbnail} =</td>
<td>Get Binary File</td>
<td>${file_2}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${image_filecontent} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
<td>select image_filecontent from metaContentSampleImage where metaContent_uuid = '${meta_uuid}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${thumbnail}</td>
<td>${image_filecontent[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
<td>${token}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1948">vdna-1948</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-1948:获取权限测试</td>
</tr>
<tr>
<td class="name"></td>
<td>[Setup]</td>
<td>set pyweb env</td>
<td>${SCRIPT_ROOT}/${PYWEB_SUT_FILE}</td>
<td>${VDDB_CENTRAL_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_CENTRAL_PORT}</td>
<td>${SSL}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>/mediawise/auth</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "auto_test", \ \ \ \ \ "password": "123" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Pyweb Api Call</td>
<td>GET</td>
<td>/mediawise/privilege</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${privilege} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>body.body</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${privilege}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check database</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>usermanager</td>
<td>select company_id from user where username='${VDDB_NODE_USER}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${company_id} =</td>
<td>Catenate</td>
<td>${return[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>mediaDNA</td>
<td>select count(*) from companyExtraInfo where company_id='${company_id}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${count} =</td>
<td>Catenate</td>
<td>${return[0][0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>${all_privilege} =</td>
<td>Catenate</td>
<td>{"image": true, "video": {"frame": true, "av": true}}</td>
</tr>
<tr>
<td class="name"></td>
<td>${sql_privilege} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>mediaDNA</td>
<td>select vd_ingest_allow,img_ingest_allow from companyExtraInfo where company_id='${company_id}'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${get_privilege} =</td>
<td>Run Keyword If</td>
<td>${count} == 1</td>
<td>Catenate</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${sql_privilege[0]}</td>
<td>ELSE</td>
<td>Catenate</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>(u'both', u'true')</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${image} =</td>
<td>Get Json Element</td>
<td>${privilege}</td>
<td>image</td>
</tr>
<tr>
<td class="name"></td>
<td>${video_frame} =</td>
<td>Get Json Element</td>
<td>${privilege}</td>
<td>video.frame</td>
</tr>
<tr>
<td class="name"></td>
<td>${video_av} =</td>
<td>Get Json Element</td>
<td>${privilege}</td>
<td>video.av</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${get_privilege}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Print Type</td>
<td>${get_privilege}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Run Keyword If</td>
<td>${image} and ${video_frame} and ${video_av}</td>
<td>Should Be Equal</td>
<td>${get_privilege}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>(u'both', u'true')</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Run Keyword If</td>
<td>${image} and not ${video_frame} and ${video_av}</td>
<td>Should Be Equal</td>
<td>${get_privilege}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>(u'both', u'false')</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Run Keyword If</td>
<td>not ${image} and ${video_frame} and ${video_av}</td>
<td>Should Be Equal</td>
<td>${get_privilege}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>(u'video', u'true')</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Run Keyword If</td>
<td>not ${image} and not ${video_frame} and ${video_av}</td>
<td>Should Be Equal</td>
<td>${get_privilege}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>(u'video', u'false')</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Run Keyword If</td>
<td>${image} and not ${video_frame} and not ${video_av}</td>
<td>Should Be Equal</td>
<td>${get_privilege}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>(u'image', u'false')</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-1996">vdna-1996</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-1996:上传snapshot（save_snapshot）——video</td>
</tr>
<tr>
<td class="name"></td>
<td>[Tags]</td>
<td>vdna-1996</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER_2}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD_2}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta&amp;instance</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/meta</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${META_INFO_MOVIE}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/contents/${meta_uuid}/instances/distinct/dna/1?md5=123456</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>None</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${inst_uuid} =</td>
<td>get instance uuid from api return</td>
<td>${return}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>upload snapshot</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${type} =</td>
<td>Catenate</td>
<td>video</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${track_no} =</td>
<td>Catenate</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${file_format} =</td>
<td>Catenate</td>
<td>jpeg</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${file_name} =</td>
<td>Catenate</td>
<td>1351_45045</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>${return} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>select is_valid from meta where meta_uuid='${meta_uuid}'</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>${return} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>select is_valid from mediaContentInstance where instance_uuid='${inst_uuid}'</td>
<td>true</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>${return} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>update mediaContentInstance set is_valid = 'valid' where instance_uuid = '${inst_uuid}'</td>
<td>false</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${SCRIPT_ROOT}/${TEST_SNAPSHOT}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Dna Ingest</td>
<td>PUT</td>
<td>/mw-int/tracks/video/${inst_uuid}/${track_no}/snapshots/${file_name}/${file_format}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SCRIPT_ROOT}/${TEST_SNAPSHOT}</td>
<td>${token}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err_code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check disk snapshot</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${SNAPSHOT_FILE_NODE}/${inst_uuid[6:8]}/${inst_uuid[21:23]}/${inst_uuid}.0/${file_name}.${file_format}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${snapshot_remote} =</td>
<td>Run Keyword If</td>
<td>'${type}' == 'video'</td>
<td>Catenate</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SNAPSHOT_FILE_NODE}/${inst_uuid[6:8]}/${inst_uuid[21:23]}/${inst_uuid}.0/${file_name}.${file_format}</td>
<td>ELSE IF</td>
<td>'${type}' == 'audio'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>Catenate</td>
<td>${SNAPSHOT_FILE_NODE}/${inst_uuid[6:8]}/${inst_uuid[21:23]}/${inst_uuid}.1/${file_name}.${file_format}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Remote Run Cmd</td>
<td>${VDDB_NODE_HOST}</td>
<td>${REMOTE_RUN_CMD_PORT}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>md5sum ${snapshot_remote}</td>
<td>true</td>
<td>true</td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Call Method</td>
<td>${return}</td>
<td>split</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SPACE}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${md5_remote} =</td>
<td>Catenate</td>
<td>${return[0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return_2} =</td>
<td>Run Cmd</td>
<td>md5sum ${SCRIPT_ROOT}/${TEST_SNAPSHOT}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return_2} =</td>
<td>Call Method</td>
<td>${return_2}</td>
<td>split</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${SPACE}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${md5_local} =</td>
<td>Catenate</td>
<td>${return_2[0]}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${md5_remote}</td>
<td>${md5_local}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and instance</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2017">vdna-2017</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2017:meta_search按company_id搜索</td>
</tr>
<tr>
<td class="name"></td>
<td>[Tags]</td>
<td>meta_search</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Setup]</td>
<td>set pyweb env</td>
<td>${SCRIPT_ROOT}/${PYWEB_SUT_FILE}</td>
<td>${VDDB_CENTRAL_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_CENTRAL_PORT}</td>
<td>${SSL}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_1}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta,company_id=1</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${i}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>/mediawise/contents/meta</td>
<td>${META_INFO_MOVIE}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_1}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_2}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "auto_test", \ \ \ \ \ "password": "123" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token_2} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta,company_id=5</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${i}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>/mediawise/contents/meta</td>
<td>${META_INFO_MOVIE}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token_2}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_2}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list_1}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list_2}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>sleep</td>
<td>2m</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>${request}</td>
<td>{ \ \ \ \ "search_scope": { \ \ \ \ \ \ \ \ "company_id": 5 \ \ \ \ }, \ \ \ \ "page_size": 100, \ \ \ \ "page_offset": 1 }</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Pyweb Api Call</td>
<td>POST</td>
<td>/mediawise/contents/video/search</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${request}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result} =</td>
<td>Execute Sql</td>
<td>${VDDB_CENTRAL_HOST}</td>
<td>${VDDB_CENTRAL_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_CENTRAL_DBPASSWD}</td>
<td>${VDDB_CENTRAL_DBNAME}</td>
<td>select count(*) from meta where company_id=5 and is_valid='valid'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${result}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${result_2} =</td>
<td>Execute Sql</td>
<td>${VDDB_CENTRAL_HOST}</td>
<td>${VDDB_CENTRAL_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_CENTRAL_DBPASSWD}</td>
<td>mddb_local</td>
<td>select count(*) from meta where company_id=5 and is_valid='valid'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${result_2}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Should Be Equal</td>
<td>${result}</td>
<td>${result_2}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err_code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check results</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body}</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>body.body</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${body}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${len} =</td>
<td>Get length</td>
<td>${body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_3}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{inst_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${j}</td>
<td>IN RANGE</td>
<td>${len}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>Get Json Element</td>
<td>${body[${j}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>content_id</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_3}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list_3}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${k}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Contain</td>
<td>${meta_list_3}</td>
<td>${meta_list_2[${k}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Not Contain</td>
<td>${meta_list_3}</td>
<td>${meta_list_1[${k}]}</td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list}</td>
<td>@{meta_list_2}</td>
<td>@{meta_list_1}</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and inst list</td>
<td>${meta_list}</td>
<td>${inst_list}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_test">test</a></td>
<td>Set Test Variable</td>
<td>@{a}</td>
<td>1</td>
<td>2</td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{b}</td>
<td>5</td>
<td>6</td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{c}</td>
<td>@{a}</td>
<td>@{b}</td>
</tr>
<tr>
<td class="name"></td>
<td>log</td>
<td>${c}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2018">vdna-2018</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2018:meta_search按including_subscription搜索——including_subscription=true</td>
</tr>
<tr>
<td class="name"></td>
<td>[Tags]</td>
<td>meta_search</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Setup]</td>
<td>set pyweb env</td>
<td>${SCRIPT_ROOT}/${PYWEB_SUT_FILE}</td>
<td>${VDDB_CENTRAL_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_CENTRAL_PORT}</td>
<td>${SSL}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${i}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>/mediawise/contents/meta</td>
<td>${META_INFO_MOVIE}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_list_string} =</td>
<td>json dumps</td>
<td>${meta_list}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${sub_id} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME_MEDIADNA}</td>
<td>select id from subscription where criteria_type = 'static' and subscription_name='auto_test'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/subscription/${sub_id[0][0]}/contents/add</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${meta_list_string}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>sleep</td>
<td>2m</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>${request}</td>
<td>{ \ \ \ \ "search_scope": { \ \ \ \ \ \ \ \ "company_id": 5, \ \ \ \ \ \ \ \ "including_subscription": true \ \ \ \ }, \ \ \ \ "page_size": 100, \ \ \ \ "page_offset": 1 }</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Pyweb Api Call</td>
<td>POST</td>
<td>/mediawise/contents/video/search</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${request}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err_code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check results</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body}</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>body.body</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${body}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${len} =</td>
<td>Get length</td>
<td>${body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_2}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${j}</td>
<td>IN RANGE</td>
<td>${len}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>Get Json Element</td>
<td>${body[${j}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>content_id</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_2}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list_2}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${k}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Contain</td>
<td>${meta_list_2}</td>
<td>${meta_list[${k}]}</td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{inst_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and inst list</td>
<td>${meta_list}</td>
<td>${inst_list}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2018-2">vdna-2018-2</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2018:meta_search按including_subscription搜索——including_subscription=false</td>
</tr>
<tr>
<td class="name"></td>
<td>[Tags]</td>
<td>meta_search</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Setup]</td>
<td>set pyweb env</td>
<td>${SCRIPT_ROOT}/${PYWEB_SUT_FILE}</td>
<td>${VDDB_CENTRAL_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_CENTRAL_PORT}</td>
<td>${SSL}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${i}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>/mediawise/contents/meta</td>
<td>${META_INFO_MOVIE}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${meta_list_string} =</td>
<td>json dumps</td>
<td>${meta_list}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${sub_id} =</td>
<td>Execute Sql</td>
<td>${VDDB_NODE_HOST}</td>
<td>${VDDB_NODE_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_NODE_DBPASSWD}</td>
<td>${VDDB_NODE_DBNAME_MEDIADNA}</td>
<td>select id from subscription where criteria_type = 'static' and subscription_name='auto_test'</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>true</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/subscription/${sub_id[0][0]}/contents/add</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${meta_list_string}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>sleep</td>
<td>2m</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>${request}</td>
<td>{ \ \ \ \ "search_scope": { \ \ \ \ \ \ \ \ "company_id": 5, \ \ \ \ \ \ \ \ "including_subscription": false \ \ \ \ }, \ \ \ \ "page_size": 100, \ \ \ \ "page_offset": 1 }</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Pyweb Api Call</td>
<td>POST</td>
<td>/mediawise/contents/video/search</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${request}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err_code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check results</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body}</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>body.body</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${body}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${len} =</td>
<td>Get length</td>
<td>${body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_2}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${j}</td>
<td>IN RANGE</td>
<td>${len}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>Get Json Element</td>
<td>${body[${j}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>content_id</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_2}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list_2}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${k}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Not Contain</td>
<td>${meta_list_2}</td>
<td>${meta_list[${k}]}</td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{inst_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and inst list</td>
<td>${meta_list}</td>
<td>${inst_list}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2019">vdna-2019</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2019:meta_search按season_number搜索</td>
</tr>
<tr>
<td class="name"></td>
<td>[Tags]</td>
<td>meta_search</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Setup]</td>
<td>set pyweb env</td>
<td>${SCRIPT_ROOT}/${PYWEB_SUT_FILE}</td>
<td>${VDDB_CENTRAL_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_CENTRAL_PORT}</td>
<td>${SSL}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta,season_no=1</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_1}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${i}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Set Test Variable</td>
<td>${meta_TV}</td>
<td>{"rating":"","tag":"aaaa","duration":100,"right_owner":"test_right_owner","id":{"type":"ISRC","value":"BigHead"},"title":"global_test","genre":"test_genre","typed_info":{"metalink":"metalink","description":"description","episode_no":0,"country":"country","sub_type" : "'TVMovie'/'Episodic'/'Non-Episodic'/'Live Event'","track_no":0,"director":"director","episode_title":"","alternate_url":"alternate_url","alternate_info":"alternate_info","season_no":1},"studio_owner":"test_studio_owner","cast":"test_cast","type":"TV","release_date":"2013-03-06","refresh_updated_at":true,"company_id":1,"updated_at":"0000-00-0000:00:00","created_at":"0000-00-0000:00:00","is_valid":"valid"}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>/mediawise/contents/meta</td>
<td>${meta_TV}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_1}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta,season_no=2</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_2}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${i}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Set Test Variable</td>
<td>${meta_TV}</td>
<td>{"rating":"","tag":"aaaa","duration":100,"right_owner":"test_right_owner","id":{"type":"ISRC","value":"BigHead"},"title":"global_test","genre":"test_genre","typed_info":{"metalink":"metalink","description":"description","episode_no":0,"country":"country","sub_type" : "'TVMovie'/'Episodic'/'Non-Episodic'/'Live Event'","track_no":0,"director":"director","episode_title":"","alternate_url":"alternate_url","alternate_info":"alternate_info","season_no":2},"studio_owner":"test_studio_owner","cast":"test_cast","type":"TV","release_date":"2013-03-06","refresh_updated_at":true,"company_id":1,"updated_at":"0000-00-0000:00:00","created_at":"0000-00-0000:00:00","is_valid":"valid"}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>/mediawise/contents/meta</td>
<td>${meta_TV}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_2}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{inst_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list}</td>
<td>@{meta_list_1}</td>
<td>@{meta_list_2}</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>sleep</td>
<td>2m</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>${request}</td>
<td>{ \ \ \ \ "equal_condition" : { \ \ \ \ \ \ \ \ "season_number":1 \ \ \ \ }, \ \ \ \ "page_size" : 100, \ \ \ \ "page_offset" : 1 }</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Pyweb Api Call</td>
<td>POST</td>
<td>/mediawise/contents/video/search</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${request}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err_code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check results</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body}</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>body.body</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${body}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${len} =</td>
<td>Get length</td>
<td>${body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_3}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${j}</td>
<td>IN RANGE</td>
<td>${len}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>Get Json Element</td>
<td>${body[${j}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>content_id</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_3}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list_3}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${k}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Contain</td>
<td>${meta_list_3}</td>
<td>${meta_list_1[${k}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Not Contain</td>
<td>${meta_list_3}</td>
<td>${meta_list_2[${k}]}</td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and inst list</td>
<td>${meta_list}</td>
<td>${inst_list}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2020">vdna-2020</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2020:meta_search按episode_number搜索</td>
</tr>
<tr>
<td class="name"></td>
<td>[Tags]</td>
<td>meta_search</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Setup]</td>
<td>set pyweb env</td>
<td>${SCRIPT_ROOT}/${PYWEB_SUT_FILE}</td>
<td>${VDDB_CENTRAL_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_CENTRAL_PORT}</td>
<td>${SSL}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta,episode_no=1</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_1}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${i}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Set Test Variable</td>
<td>${meta_TV}</td>
<td>{"rating":"","tag":"aaaa","duration":100,"right_owner":"test_right_owner","id":{"type":"ISRC","value":"BigHead"},"title":"global_test","genre":"test_genre","typed_info":{"metalink":"metalink","description":"description","episode_no":1,"country":"country","sub_type" : "'TVMovie'/'Episodic'/'Non-Episodic'/'Live Event'","track_no":0,"director":"director","episode_title":"","alternate_url":"alternate_url","alternate_info":"alternate_info","season_no":1},"studio_owner":"test_studio_owner","cast":"test_cast","type":"TV","release_date":"2013-03-06","refresh_updated_at":true,"company_id":1,"updated_at":"0000-00-0000:00:00","created_at":"0000-00-0000:00:00","is_valid":"valid"}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>/mediawise/contents/meta</td>
<td>${meta_TV}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_1}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta,episode_no=2</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_2}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${i}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Set Test Variable</td>
<td>${meta_TV}</td>
<td>{"rating":"","tag":"aaaa","duration":100,"right_owner":"test_right_owner","id":{"type":"ISRC","value":"BigHead"},"title":"global_test","genre":"test_genre","typed_info":{"metalink":"metalink","description":"description","episode_no":2,"country":"country","sub_type" : "'TVMovie'/'Episodic'/'Non-Episodic'/'Live Event'","track_no":0,"director":"director","episode_title":"","alternate_url":"alternate_url","alternate_info":"alternate_info","season_no":1},"studio_owner":"test_studio_owner","cast":"test_cast","type":"TV","release_date":"2013-03-06","refresh_updated_at":true,"company_id":1,"updated_at":"0000-00-0000:00:00","created_at":"0000-00-0000:00:00","is_valid":"valid"}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>/mediawise/contents/meta</td>
<td>${meta_TV}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_2}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{inst_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list}</td>
<td>@{meta_list_1}</td>
<td>@{meta_list_2}</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>sleep</td>
<td>2m</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>${request}</td>
<td>{ \ \ \ \ "equal_condition": { \ \ \ \ \ \ \ \ "episode_number": 1 \ \ \ \ }, \ \ \ \ "page_size": 100, \ \ \ \ "page_offset": 1 }</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Pyweb Api Call</td>
<td>POST</td>
<td>/mediawise/contents/video/search</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${request}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err_code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check results</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body}</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>body.body</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${body}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${len} =</td>
<td>Get length</td>
<td>${body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_3}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${j}</td>
<td>IN RANGE</td>
<td>${len}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>Get Json Element</td>
<td>${body[${j}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>content_id</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_3}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list_3}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${k}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Contain</td>
<td>${meta_list_3}</td>
<td>${meta_list_1[${k}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Not Contain</td>
<td>${meta_list_3}</td>
<td>${meta_list_2[${k}]}</td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{inst_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list}</td>
<td>@{meta_list_1}</td>
<td>@{meta_list_2}</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and inst list</td>
<td>${meta_list}</td>
<td>${inst_list}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2021">vdna-2021</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2021:meta_search按complete_condition搜索——complete_condition=complete</td>
</tr>
<tr>
<td class="name"></td>
<td>[Tags]</td>
<td>meta_search</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Setup]</td>
<td>set pyweb env</td>
<td>${SCRIPT_ROOT}/${PYWEB_SUT_FILE}</td>
<td>${VDDB_CENTRAL_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_CENTRAL_PORT}</td>
<td>${SSL}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta,valid</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_1}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${i}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Set Test Variable</td>
<td>${meta_TV}</td>
<td>{"rating":"","tag":"aaaa","duration":100,"right_owner":"test_right_owner","id":{"type":"ISRC","value":"BigHead"},"title":"global_test","genre":"test_genre","typed_info":{"metalink":"metalink","description":"description","episode_no":0,"country":"country","sub_type" : "'TVMovie'/'Episodic'/'Non-Episodic'/'Live Event'","track_no":0,"director":"director","episode_title":"","alternate_url":"alternate_url","alternate_info":"alternate_info","season_no":1},"studio_owner":"test_studio_owner","cast":"test_cast","type":"TV","release_date":"2013-03-06","refresh_updated_at":true,"company_id":1,"updated_at":"0000-00-0000:00:00","created_at":"0000-00-0000:00:00","is_valid":"valid"}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>/mediawise/contents/meta</td>
<td>${meta_TV}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_1}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta,pending</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_2}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${i}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Set Test Variable</td>
<td>${meta_TV}</td>
<td>{"rating":"","tag":"aaaa","duration":100,"right_owner":"test_right_owner","id":{"type":"ISRC","value":"BigHead"},"title":"global_test","genre":"test_genre","typed_info":{"metalink":"metalink","description":"description","episode_no":0,"country":"country","sub_type" : "'TVMovie'/'Episodic'/'Non-Episodic'/'Live Event'","track_no":0,"director":"director","episode_title":"","alternate_url":"alternate_url","alternate_info":"alternate_info","season_no":1},"studio_owner":"test_studio_owner","cast":"test_cast","type":"TV","release_date":"2013-03-06","refresh_updated_at":true,"company_id":1,"updated_at":"0000-00-0000:00:00","created_at":"0000-00-0000:00:00","is_valid":"valid"}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>/mediawise/contents/meta</td>
<td>${meta_TV}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Execute Sql</td>
<td>${VDDB_CENTRAL_HOST}</td>
<td>${VDDB_CENTRAL_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${VDDB_CENTRAL_DBPASSWD}</td>
<td>mddb_local</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>update meta set is_valid="pending" where meta_uuid='${meta_uuid}'</td>
<td>false</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_2}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{inst_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list}</td>
<td>@{meta_list_1}</td>
<td>@{meta_list_2}</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>sleep</td>
<td>2m</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>${request}</td>
<td>{ \ \ \ \ "complete_condition" : "complete", \ \ \ \ "page_size" : 100, \ \ \ \ "page_offset" : 1 }</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Pyweb Api Call</td>
<td>POST</td>
<td>/mediawise/contents/video/search</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${request}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err_code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check results</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body}</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>body.body</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${body}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${len} =</td>
<td>Get length</td>
<td>${body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_3}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${j}</td>
<td>IN RANGE</td>
<td>${len}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>Get Json Element</td>
<td>${body[${j}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>content_id</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${status} =</td>
<td>Get Json Element</td>
<td>${body[${j}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>is_valid</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Be Equal</td>
<td>${status}</td>
<td>valid</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_3}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list_3}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${k}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Contain</td>
<td>${meta_list_3}</td>
<td>${meta_list_1[${k}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Not Contain</td>
<td>${meta_list_3}</td>
<td>${meta_list_2[${k}]}</td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2021-2">vdna-2021-2</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2021:meta_search按complete_condition搜索——complete_condition=both</td>
</tr>
<tr>
<td class="name"></td>
<td>[Tags]</td>
<td>meta_search</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Setup]</td>
<td>set pyweb env</td>
<td>${SCRIPT_ROOT}/${PYWEB_SUT_FILE}</td>
<td>${VDDB_CENTRAL_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_CENTRAL_PORT}</td>
<td>${SSL}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta,valid</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_1}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${i}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Set Test Variable</td>
<td>${meta_TV}</td>
<td>{"rating":"","tag":"aaaa","duration":100,"right_owner":"test_right_owner","id":{"type":"ISRC","value":"BigHead"},"title":"global_test","genre":"test_genre","typed_info":{"metalink":"metalink","description":"description","episode_no":0,"country":"country","sub_type" : "'TVMovie'/'Episodic'/'Non-Episodic'/'Live Event'","track_no":0,"director":"director","episode_title":"","alternate_url":"alternate_url","alternate_info":"alternate_info","season_no":1},"studio_owner":"test_studio_owner","cast":"test_cast","type":"TV","release_date":"2013-03-06","refresh_updated_at":true,"company_id":1,"updated_at":"0000-00-0000:00:00","created_at":"0000-00-0000:00:00","is_valid":"valid"}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>/mediawise/contents/meta</td>
<td>${meta_TV}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_1}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta,pending</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_2}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${i}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Set Test Variable</td>
<td>${meta_TV}</td>
<td>{"rating":"","tag":"aaaa","duration":100,"right_owner":"test_right_owner","id":{"type":"ISRC","value":"BigHead"},"title":"global_test","genre":"test_genre","typed_info":{"metalink":"metalink","description":"description","episode_no":0,"country":"country","sub_type" : "'TVMovie'/'Episodic'/'Non-Episodic'/'Live Event'","track_no":0,"director":"director","episode_title":"","alternate_url":"alternate_url","alternate_info":"alternate_info","season_no":1},"studio_owner":"test_studio_owner","cast":"test_cast","type":"TV","release_date":"2013-03-06","refresh_updated_at":true,"company_id":1,"updated_at":"0000-00-0000:00:00","created_at":"0000-00-0000:00:00","is_valid":"valid"}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>/mediawise/contents/meta</td>
<td>${meta_TV}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Execute Sql</td>
<td>${VDDB_CENTRAL_HOST}</td>
<td>${VDDB_CENTRAL_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${VDDB_CENTRAL_DBPASSWD}</td>
<td>mddb_local</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>update meta set is_valid="pending" where meta_uuid='${meta_uuid}'</td>
<td>false</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_2}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{inst_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list}</td>
<td>@{meta_list_1}</td>
<td>@{meta_list_2}</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>sleep</td>
<td>2m</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>${request}</td>
<td>{ \ \ \ \ "complete_condition" : "both", \ \ \ \ "page_size" : 100, \ \ \ \ "page_offset" : 1 }</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Pyweb Api Call</td>
<td>POST</td>
<td>/mediawise/contents/video/search</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${request}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err_code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check results</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body}</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>body.body</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${body}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${len} =</td>
<td>Get length</td>
<td>${body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_3}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{both}</td>
<td>valid</td>
<td>pending</td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${j}</td>
<td>IN RANGE</td>
<td>${len}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>Get Json Element</td>
<td>${body[${j}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>content_id</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${status} =</td>
<td>Get Json Element</td>
<td>${body[${j}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>is_valid</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Contain</td>
<td>${both}</td>
<td>${status}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_3}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list_3}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${k}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Contain</td>
<td>${meta_list_3}</td>
<td>${meta_list_1[${k}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Contain</td>
<td>${meta_list_3}</td>
<td>${meta_list_2[${k}]}</td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and inst list</td>
<td>${meta_list}</td>
<td>${inst_list}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2021-3">vdna-2021-3</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2021:meta_search按complete_condition搜索——complete_condition=non-complete</td>
</tr>
<tr>
<td class="name"></td>
<td>[Tags]</td>
<td>meta_search</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Setup]</td>
<td>set pyweb env</td>
<td>${SCRIPT_ROOT}/${PYWEB_SUT_FILE}</td>
<td>${VDDB_CENTRAL_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_CENTRAL_PORT}</td>
<td>${SSL}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta,valid</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_1}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${i}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Set Test Variable</td>
<td>${meta_TV}</td>
<td>{"rating":"","tag":"aaaa","duration":100,"right_owner":"test_right_owner","id":{"type":"ISRC","value":"BigHead"},"title":"global_test","genre":"test_genre","typed_info":{"metalink":"metalink","description":"description","episode_no":0,"country":"country","sub_type" : "'TVMovie'/'Episodic'/'Non-Episodic'/'Live Event'","track_no":0,"director":"director","episode_title":"","alternate_url":"alternate_url","alternate_info":"alternate_info","season_no":1},"studio_owner":"test_studio_owner","cast":"test_cast","type":"TV","release_date":"2013-03-06","refresh_updated_at":true,"company_id":1,"updated_at":"0000-00-0000:00:00","created_at":"0000-00-0000:00:00","is_valid":"valid"}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>/mediawise/contents/meta</td>
<td>${meta_TV}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_1}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta,pending</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_2}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${i}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Set Test Variable</td>
<td>${meta_TV}</td>
<td>{"rating":"","tag":"aaaa","duration":100,"right_owner":"test_right_owner","id":{"type":"ISRC","value":"BigHead"},"title":"global_test","genre":"test_genre","typed_info":{"metalink":"metalink","description":"description","episode_no":0,"country":"country","sub_type" : "'TVMovie'/'Episodic'/'Non-Episodic'/'Live Event'","track_no":0,"director":"director","episode_title":"","alternate_url":"alternate_url","alternate_info":"alternate_info","season_no":1},"studio_owner":"test_studio_owner","cast":"test_cast","type":"TV","release_date":"2013-03-06","refresh_updated_at":true,"company_id":1,"updated_at":"0000-00-0000:00:00","created_at":"0000-00-0000:00:00","is_valid":"valid"}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>/mediawise/contents/meta</td>
<td>${meta_TV}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Execute Sql</td>
<td>${VDDB_CENTRAL_HOST}</td>
<td>${VDDB_CENTRAL_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${VDDB_CENTRAL_DBPASSWD}</td>
<td>mddb_local</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>update meta set is_valid="pending" where meta_uuid='${meta_uuid}'</td>
<td>false</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_2}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{inst_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list}</td>
<td>@{meta_list_1}</td>
<td>@{meta_list_2}</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>sleep</td>
<td>2m</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>${request}</td>
<td>{ \ \ \ \ "complete_condition" : "non-complete", \ \ \ \ "page_size" : 100, \ \ \ \ "page_offset" : 1 }</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Pyweb Api Call</td>
<td>POST</td>
<td>/mediawise/contents/video/search</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${request}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err_code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check results</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body}</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>body.body</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${body}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${len} =</td>
<td>Get length</td>
<td>${body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_3}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${j}</td>
<td>IN RANGE</td>
<td>${len}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>Get Json Element</td>
<td>${body[${j}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>content_id</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${status} =</td>
<td>Get Json Element</td>
<td>${body[${j}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>is_valid</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Be Equal</td>
<td>${status}</td>
<td>pending</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_3}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list_3}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${k}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Not Contain</td>
<td>${meta_list_3}</td>
<td>${meta_list_1[${k}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Contain</td>
<td>${meta_list_3}</td>
<td>${meta_list_2[${k}]}</td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and inst list</td>
<td>${meta_list}</td>
<td>${inst_list}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2021-4">vdna-2021-4</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2021:meta_search按complete_condition搜索——complete_condition为空</td>
</tr>
<tr>
<td class="name"></td>
<td>[Tags]</td>
<td>meta_search</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Setup]</td>
<td>set pyweb env</td>
<td>${SCRIPT_ROOT}/${PYWEB_SUT_FILE}</td>
<td>${VDDB_CENTRAL_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_CENTRAL_PORT}</td>
<td>${SSL}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
<td>/mediawise/auth</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>{ \ \ \ \ "protocols": [${PYWEB_PROTOCOL}], \ \ \ \ \ "user": "${VDDB_NODE_USER}", \ \ \ \ \ "password": "${VDDB_NODE_PASSWD}" }</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${token} =</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>header.set-cookie</td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta,valid</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_1}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${i}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Set Test Variable</td>
<td>${meta_TV}</td>
<td>{"rating":"","tag":"aaaa","duration":100,"right_owner":"test_right_owner","id":{"type":"ISRC","value":"BigHead"},"title":"global_test","genre":"test_genre","typed_info":{"metalink":"metalink","description":"description","episode_no":0,"country":"country","sub_type" : "'TVMovie'/'Episodic'/'Non-Episodic'/'Live Event'","track_no":0,"director":"director","episode_title":"","alternate_url":"alternate_url","alternate_info":"alternate_info","season_no":1},"studio_owner":"test_studio_owner","cast":"test_cast","type":"TV","release_date":"2013-03-06","refresh_updated_at":true,"company_id":1,"updated_at":"0000-00-0000:00:00","created_at":"0000-00-0000:00:00","is_valid":"valid"}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>/mediawise/contents/meta</td>
<td>${meta_TV}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_1}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>create meta,pending</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_2}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${i}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Set Test Variable</td>
<td>${meta_TV}</td>
<td>{"rating":"","tag":"aaaa","duration":100,"right_owner":"test_right_owner","id":{"type":"ISRC","value":"BigHead"},"title":"global_test","genre":"test_genre","typed_info":{"metalink":"metalink","description":"description","episode_no":0,"country":"country","sub_type" : "'TVMovie'/'Episodic'/'Non-Episodic'/'Live Event'","track_no":0,"director":"director","episode_title":"","alternate_url":"alternate_url","alternate_info":"alternate_info","season_no":1},"studio_owner":"test_studio_owner","cast":"test_cast","type":"TV","release_date":"2013-03-06","refresh_updated_at":true,"company_id":1,"updated_at":"0000-00-0000:00:00","created_at":"0000-00-0000:00:00","is_valid":"valid"}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${return} =</td>
<td>pyweb api call</td>
<td>POST</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>/mediawise/contents/meta</td>
<td>${meta_TV}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>check err_code</td>
<td>${return}</td>
<td>${303}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>get meta uuid from api return</td>
<td>${return}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Execute Sql</td>
<td>${VDDB_CENTRAL_HOST}</td>
<td>${VDDB_CENTRAL_DBUSERNAME}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${VDDB_CENTRAL_DBPASSWD}</td>
<td>mddb_local</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>update meta set is_valid="pending" where meta_uuid='${meta_uuid}'</td>
<td>false</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_2}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{inst_list}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list}</td>
<td>@{meta_list_1}</td>
<td>@{meta_list_2}</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>sleep</td>
<td>2m</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>${request}</td>
<td>\ { \ \ \ \ "complete_condition" : "", \ \ \ \ "page_size" : 100, \ \ \ \ "page_offset" : 1 }</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${return} =</td>
<td>Pyweb Api Call</td>
<td>POST</td>
<td>/mediawise/contents/video/search</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${request}</td>
<td>{"Content-type":"application/x-www-form-urlencoded","Cookie": "${token}"}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${return}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check err_code</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>check err_code</td>
<td>${return}</td>
<td>${200}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Comment</td>
<td>check results</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${body}</td>
<td>Get Json Element</td>
<td>${return}</td>
<td>body.body</td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${body}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>${len} =</td>
<td>Get length</td>
<td>${body}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Set Test Variable</td>
<td>@{meta_list_3}</td>
<td>@{EMPTY}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${j}</td>
<td>IN RANGE</td>
<td>${len}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${meta_uuid} =</td>
<td>Get Json Element</td>
<td>${body[${j}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>content_id</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>${status} =</td>
<td>Get Json Element</td>
<td>${body[${j}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>is_valid</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Be Equal</td>
<td>${status}</td>
<td>valid</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Call Method</td>
<td>${meta_list_3}</td>
<td>append</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>Log Many</td>
<td>${meta_list_3}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${k}</td>
<td>IN RANGE</td>
<td>5</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Contain</td>
<td>${meta_list_3}</td>
<td>${meta_list_1[${k}]}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>Should Not Contain</td>
<td>${meta_list_3}</td>
<td>${meta_list_2[${k}]}</td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and inst list</td>
<td>${meta_list}</td>
<td>${inst_list}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="test_vdna-2022">vdna-2022</a></td>
<td>[Documentation]</td>
<td class="colspan3" colspan="3">vdna-2022:meta_search按sort_order搜索——update_at</td>
</tr>
<tr>
<td class="name"></td>
<td>[Tags]</td>
<td>meta_search</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Setup]</td>
<td>set pyweb env</td>
<td>${SCRIPT_ROOT}/${PYWEB_SUT_FILE}</td>
<td>${VDDB_CENTRAL_HOST}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${VDDB_CENTRAL_PORT}</td>
<td>${SSL}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>[Teardown]</td>
<td>delete meta and inst list</td>
<td>${meta_list}</td>
<td>${inst_list}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</table>
<table border="1" id="keyword">
<tr>
<th class="name" colspan="5">Keywords</th>
</tr>
<tr>
<td class="name"><a name="keyword_delete meta and instance">delete meta and instance</a></td>
<td>[Arguments]</td>
<td>${inst_uuid}</td>
<td>${meta_uuid}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>delete instance</td>
<td>${inst_uuid}</td>
<td>${VDDB_NODE_USER}</td>
<td>${VDDB_NODE_PASSWD}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${PYWEB_PROTOCOL}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
<td>${VDDB_NODE_PASSWD}</td>
</tr>
<tr>
<td class="name"></td>
<td>...</td>
<td>${PYWEB_PROTOCOL}</td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td class="name"><a name="keyword_delete meta and inst list">delete meta and inst list</a></td>
<td>[Arguments]</td>
<td>${meta_list}</td>
<td>${inst_list}</td>
<td></td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${meta_uuid}</td>
<td>IN</td>
<td>@{meta_list}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>delete meta</td>
<td>${meta_uuid}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
</tr>
<tr>
<td class="name"></td>
<td>: FOR</td>
<td>${inst_uuid}</td>
<td>IN</td>
<td>@{inst_list}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>delete instance</td>
<td>${inst_uuid}</td>
<td>${VDDB_NODE_USER}</td>
</tr>
<tr>
<td class="name"></td>
<td></td>
<td>...</td>
<td>${VDDB_NODE_PASSWD}</td>
<td>${PYWEB_PROTOCOL}</td>
</tr>
</table>
</body>
</html>
